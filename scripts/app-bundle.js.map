{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","containers/game-container/game-container.js","gateways/connection/connection-api.js","gateways/data/data-api.js","lib/game-logic.js","lib/message-types.js","resources/attributes/key-return.js","lib/utils.js","lib/string-utils.js","resources/attributes/take-focus.js"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","socketRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","globalResources","MessageTypes","GameContainer","Element","element","dataAPI","connectionAPI","attached","initStateModel","initDOMHooks","attachDOMListeners","connectToServer","detached","detachDOMListeners","serverSocket","getGameSocketConnection","hookUpServerSocket","isConnectingToServer","loadingText","onopen","event","onmessage","data","JSON","parse","type","CONNECT_RESPONSE","handleConnectResponse","SET_NICKNAME_RESPONSE","handleSetNicknameResponse","console","log","sessionId","isSettingNickname","isNicknameSet","setNickname","nickname","currentNickname","message","constructMessage","SET_NICKNAME","sendToServer","sendMessage","socket","send","stringify","content","ConnectionAPI","WebSocket","DataAPI","client","withBaseUrl","getScoreRequest","createRequest","asGet","MSG_TYPE_CONNECT_RESPONSE","JOIN_GAME","KeyReturn","enterPressed","key","e","which","keyCode","value","addEventListener","removeEventListener","isEmpty","val","trim","focus"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() { }\n\n  configureRouter(cfg, router) {\n    this.router = router;\n    cfg.title = 'Typerace';\n\n    cfg.map([\n      {\n        route: '',\n        name: 'game',\n        moduleId: 'containers/game-container/game-container'\n      }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  gatewayRootURL: 'https://localhost:8081',\n  socketRootURL: 'ws://localhost:8081'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources([\n    './attributes/key-return',\n    './attributes/take-focus'\n  ]);\n}\n","import { inject, bindable } from 'aurelia-framework';\r\n\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\nimport { ConnectionAPI } from '../../gateways/connection/connection-api';\r\n\r\nimport { isEmpty } from '../../lib/string-utils';\r\nimport * as MessageTypes from '../../lib/message-types';\r\n\r\n@inject(Element, DataAPI, ConnectionAPI)\r\nexport class GameContainer {\r\n  @bindable currentNickname = '';\r\n\r\n  constructor(element, dataAPI, connectionAPI) {\r\n    this.element = element;\r\n    this.dataAPI = dataAPI;\r\n    this.connectionAPI = connectionAPI;\r\n  }\r\n\r\n  attached() {\r\n    this.initStateModel();\r\n    this.initDOMHooks();\r\n    this.attachDOMListeners();\r\n\r\n    this.connectToServer();\r\n  }\r\n\r\n  detached() {\r\n    this.detachDOMListeners();\r\n  }\r\n\r\n  connectToServer() {\r\n    const serverSocket = this.serverSocket = this.connectionAPI.getGameSocketConnection();\r\n    this.hookUpServerSocket(serverSocket);\r\n  }\r\n\r\n  hookUpServerSocket(serverSocket) {\r\n    this.isConnectingToServer = true;\r\n    this.loadingText = 'Connecting to server...';\r\n    serverSocket.onopen = (event) => {\r\n      this.isConnectingToServer = false;\r\n    };\r\n    serverSocket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      switch (data.type) {\r\n      case MessageTypes.CONNECT_RESPONSE:\r\n        this.handleConnectResponse(data);\r\n        break;\r\n      case MessageTypes.SET_NICKNAME_RESPONSE:\r\n        this.handleSetNicknameResponse(data);\r\n        break;\r\n      default:\r\n        break;\r\n      }\r\n      console.log(data);\r\n    };\r\n  }\r\n\r\n  handleConnectResponse(data) {\r\n    this.sessionId = data.sessionId;\r\n  }\r\n\r\n  handleSetNicknameResponse(data) {\r\n    this.isSettingNickname = false;\r\n    this.isNicknameSet = true;\r\n  }\r\n\r\n  setNickname() {\r\n    this.loadingText = 'Setting nickname...';\r\n    this.isSettingNickname = true;\r\n    const nickname = this.currentNickname;\r\n    const message = constructMessage(MessageTypes.SET_NICKNAME, { nickname });\r\n    this.sendToServer(message);\r\n  }\r\n\r\n  initStateModel() {\r\n    this.isConnectingToServer = false;\r\n    this.isSettingNickname = false;\r\n\r\n    this.sessionId = null;\r\n    this.isNicknameSet = false;\r\n  }\r\n\r\n  initDOMHooks() {\r\n\r\n  }\r\n\r\n  attachDOMListeners() {\r\n\r\n  }\r\n\r\n  detachDOMListeners() {\r\n\r\n  }\r\n\r\n  get showLoadingBanner() {\r\n    return this.isConnectingToServer || !this.sessionId || this.isSettingNickname;\r\n  }\r\n\r\n  get showNicknameForm() {\r\n    return !this.isConnectingToServer && !this.isNicknameSet;\r\n  }\r\n\r\n  get canSetNickname() {\r\n    return !isEmpty(this.currentNickname);\r\n  }\r\n\r\n  sendToServer(message) {\r\n    sendMessage(this.serverSocket, message);\r\n  }\r\n}\r\n\r\nconst sendMessage = (socket, message) => {\r\n  socket.send(JSON.stringify(message));\r\n};\r\n\r\nconst constructMessage = (type, content) => {\r\n  return {\r\n    type,\r\n    ...content\r\n  };\r\n};\r\n","import environment from '../../environment';\r\n\r\nexport class ConnectionAPI {\r\n  constructor() {\r\n    this.socketRootURL = environment.socketRootURL;\r\n  }\r\n\r\n  getGameSocketConnection() {\r\n    return new WebSocket(`${this.socketRootURL}/game`);\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getScoreRequest(sessionId) {\r\n    return this.client\r\n      .createRequest(`/scores/${sessionId}`)\r\n      .asGet();\r\n  }\r\n}\r\n","export const MSG_TYPE_CONNECT_RESPONSE = 'CONNECT_RESPONSE';\r\n","/* server messages */\r\nexport const CONNECT_RESPONSE = 'CONNECT_RESPONSE';\r\nexport const SET_NICKNAME_RESPONSE = 'SET_NICKNAME_RESPONSE';\r\n\r\n/* client messages */\r\nexport const SET_NICKNAME = 'SET_NICKNAME';\r\nexport const JOIN_GAME = 'JOIN_GAME';\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('key-return')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  enterPressed = () => {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n\r\n    this.enterPressed = e => {\r\n      let key = e.which || e.keyCode;\r\n      if (key === 13) {\r\n        this.value();\r\n      }\r\n    };\r\n  }\r\n\r\n  attached() {\r\n    this.element.addEventListener('keypress', this.enterPressed);\r\n  }\r\n\r\n  detached() {\r\n    this.element.removeEventListener('keypress', this.enterPressed);\r\n  }\r\n}\r\n","export function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","export function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('take-focus')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    this.element.focus();\r\n  }\r\n}\r\n"],"sourceRoot":".."}