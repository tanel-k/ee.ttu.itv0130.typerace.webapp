{"version":3,"sources":["app.js","environment.js","main.js","lib/message-types.js","lib/string-utils.js","resources/index.js","containers/game-container/game-container.js","gateways/connection/connection-api.js","gateways/data/data-api.js","resources/attributes/key-return.js","resources/attributes/take-focus.js","resources/elements/ui-wrappers/bs-row.js","resources/attributes/no-select.js"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","socketRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CONNECT_RESPONSE","SET_NICKNAME_RESPONSE","BROADCAST_WORD","TYPE_WORD_RESPONSE","TERMINATE_GAME","WORD_MISMATCH","ROUND_WON","ROUND_LOST","SET_NICKNAME","JOIN_GAME","TYPE_WORD","isEmpty","val","trim","globalResources","MessageTypes","GameContainer","Element","element","dataAPI","connectionAPI","attached","audioBank","victoryDing","Audio","lossDing","closeItem","loserPointDing","winnerPointDing","wordMismatch","joinGame","opponentFound","initStateModel","initDOMHooks","attachDOMListeners","connectToServer","detached","detachDOMListeners","isConnectingToServer","isSettingNickname","isWaitingForOpponent","isCheckingWord","showWinStatus","canJoinGame","canDisplayTutorial","sessionId","didWin","isNicknameSet","loadingText","currentScore","getVictoryBanner","querySelector","serverSocket","getGameSocketConnection","hookUpServerSocket","onopen","event","onclose","onmessage","data","JSON","parse","console","log","type","handleConnectResponse","handleSetNicknameResponse","handleBroadcastWord","handleTypeWordResponse","handleTerminateGame","isInGame","playAudio","currentWord","word","currentOpponent","opponentNickname","hasNotSentWord","gameMessageType","handleWordMismatch","handleRoundWon","handleRoundLost","victoryBanner","classList","remove","setTimeout","add","handleSetNicknameClick","setNickname","handleJoinGameClick","handleWordSubmit","canSubmitWord","sendWord","nickname","currentNickname","message","constructMessage","sendToServer","sendMessage","audioNode","cloneNode","play","socket","send","stringify","content","ConnectionAPI","WebSocket","DataAPI","client","withBaseUrl","getScoreRequest","createRequest","asGet","KeyReturn","enterPressed","key","e","which","keyCode","value","addEventListener","removeEventListener","focus","DEFAULT_SIZE","BsRow","NoSelect","style","cursor"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;AACX,mBAAc;AAAA;AAAG;;kBAEjBC,2CAAgBC,KAAKC,QAAQ;AAC3B,WAAKA,MAAL,GAAcA,MAAd;AACAD,UAAIE,KAAJ,GAAY,UAAZ;;AAEAF,UAAIG,GAAJ,CAAQ,CACN;AACEC,eAAO,EADT;AAEEC,cAAM,MAFR;AAGEC,kBAAU;AAHZ,OADM,CAAR;AAOD;;;;;;;;;;;oBCdY;AACbC,WAAO,IADM;AAEbC,aAAS,IAFI;AAGbC,oBAAgB,wBAHH;AAIbC,mBAAe;AAJF;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYZ,KAAhB,EAAuB;AACrBS,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYZ,OAAhB,EAAyB;AACvBQ,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;ACrBM,MAAMC,8CAAmB,kBAAzB;AACA,MAAMC,wDAAwB,uBAA9B;AACA,MAAMC,0CAAiB,gBAAvB;AACA,MAAMC,kDAAqB,oBAA3B;AACA,MAAMC,0CAAiB,gBAAvB;AAEA,MAAMC,wCAAgB,eAAtB;AACA,MAAMC,gCAAY,WAAlB;AACA,MAAMC,kCAAa,YAAnB;;AAGA,MAAMC,sCAAe,cAArB;AACA,MAAMC,gCAAY,WAAlB;AACA,MAAMC,gCAAY,WAAlB;;;;;;;;UCfSC,UAAAA;AAAT,WAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,WAAO,CAACA,GAAD,IAAQ,CAACA,IAAIC,IAAJ,EAAhB;AACD;;;;;;;;UCFe3B,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B;AAChCA,WAAO0B,eAAP,CAAuB,CACrB,yBADqB,EAErB,yBAFqB,EAGrB,wBAHqB,EAIrB,+BAJqB,CAAvB;AAMD;;;;;;;;;;MCDWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGCC,wBAAAA,wBADZ,8BAAOC,OAAP;AAKC,2BAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,aAA9B,EAA6C;AAAA;;AAAA;;AAAA;;AAC3C,WAAKF,OAAL,GAAeA,OAAf;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKC,aAAL,GAAqBA,aAArB;AACD;;4BAEDC,+BAAW;AACT,WAAKC,SAAL,GAAiB;AACfC,qBAAa,IAAIC,KAAJ,CAAU,8BAAV,CADE;AAEfC,kBAAU,IAAID,KAAJ,CAAU,2BAAV,CAFK;AAGfE,mBAAW,IAAIF,KAAJ,CAAU,4BAAV,CAHI;AAIfG,wBAAgB,IAAIH,KAAJ,CAAU,kCAAV,CAJD;AAKfI,yBAAiB,IAAIJ,KAAJ,CAAU,mCAAV,CALF;AAMfK,sBAAc,IAAIL,KAAJ,CAAU,+BAAV,CANC;AAOfM,kBAAU,IAAIN,KAAJ,CAAU,2BAAV,CAPK;AAQfO,uBAAe,IAAIP,KAAJ,CAAU,gCAAV;AARA,OAAjB;;AAWA,WAAKQ,cAAL;AACA,WAAKC,YAAL;AACA,WAAKC,kBAAL;;AAEA,WAAKC,eAAL;AACD;;4BAEDC,+BAAW;AACT,WAAKC,kBAAL;AACD;;4BAGDL,2CAAiB;AACf,WAAKM,oBAAL,GAA4B,KAA5B;AACA,WAAKC,iBAAL,GAAyB,KAAzB;AACA,WAAKC,oBAAL,GAA4B,KAA5B;AACA,WAAKC,cAAL,GAAsB,KAAtB;;AAEA,WAAKC,aAAL,GAAqB,KAArB;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,kBAAL,GAA0B,KAA1B;;AAEA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAKC,MAAL,GAAc,IAAd;AACA,WAAKC,aAAL,GAAqB,KAArB;AACA,WAAKC,WAAL,GAAmB,IAAnB;AACA,WAAKC,YAAL,GAAoB,CAApB;AACD;;4BAEDhB,uCAAe;AAAA;;AACb,WAAKiB,gBAAL,GAAwB;AAAA,eAAO,MAAKhC,OAAL,CAAaiC,aAAb,CAA2B,iBAA3B,CAAP;AAAA,OAAxB;AACD;;4BAEDjB,mDAAqB,CAEpB;;4BAEDG,mDAAqB,CAEpB;;4BAEDF,6CAAkB;AAChB,UAAMiB,eAAe,KAAKA,YAAL,GAAoB,KAAKhC,aAAL,CAAmBiC,uBAAnB,EAAzC;AACA,WAAKC,kBAAL,CAAwBF,YAAxB;AACD;;4BAEDE,iDAAmBF,cAAc;AAAA;;AAC/B,WAAKd,oBAAL,GAA4B,IAA5B;AACA,WAAKU,WAAL,GAAmB,yBAAnB;AACAI,mBAAaG,MAAb,GAAsB,UAACC,KAAD,EAAW;AAC/B,eAAKlB,oBAAL,GAA4B,KAA5B;AACD,OAFD;;AAIAc,mBAAaK,OAAb,GAAuB,UAACD,KAAD,EAAW,CAEjC,CAFD;;AAIAJ,mBAAaM,SAAb,GAAyB,UAACF,KAAD,EAAW;AAClC,YAAMG,OAAOC,KAAKC,KAAL,CAAWL,MAAMG,IAAjB,CAAb;AACAG,gBAAQC,GAAR,CAAYJ,IAAZ;AACA,gBAAQA,KAAKK,IAAb;AACA,eAAKjD,aAAaf,gBAAlB;AACE,mBAAKiE,qBAAL,CAA2BN,IAA3B;AACA;AACF,eAAK5C,aAAad,qBAAlB;AACE,mBAAKiE,yBAAL,CAA+BP,IAA/B;AACA;AACF,eAAK5C,aAAab,cAAlB;AACE,mBAAKiE,mBAAL,CAAyBR,IAAzB;AACA;AACF,eAAK5C,aAAaZ,kBAAlB;AACE,mBAAKiE,sBAAL,CAA4BT,IAA5B;AACA;AACF,eAAK5C,aAAaX,cAAlB;AACE,mBAAKiE,mBAAL,CAAyBV,IAAzB;AACA;AACF;AACE;AAjBF;AAmBD,OAtBD;AAuBD;;4BAIDM,uDAAsBN,MAAM;AAC1B,WAAKd,SAAL,GAAiBc,KAAKd,SAAtB;AACD;;4BAEDqB,+DAA0BP,MAAM;AAC9B,WAAKpB,iBAAL,GAAyB,KAAzB;AACA,WAAKQ,aAAL,GAAqB,IAArB;;AAEA,WAAKH,kBAAL,GAA0B,IAA1B;AACA,WAAKD,WAAL,GAAmB,IAAnB;AACA,WAAK2B,QAAL,GAAgB,KAAhB;AACD;;4BAEDH,mDAAoBR,MAAM;AACxBY,gBAAU,KAAKjD,SAAL,CAAeS,aAAzB;;AAEA,WAAKS,oBAAL,GAA4B,KAA5B;AACA,WAAKgC,WAAL,GAAmBb,KAAKc,IAAxB;AACA,WAAKC,eAAL,GAAuBf,KAAKgB,gBAA5B;AACA,WAAKL,QAAL,GAAgB,IAAhB;AACA,WAAKM,cAAL,GAAsB,IAAtB;AACD;;4BAEDR,yDAAuBT,MAAM;AAC3B,WAAKlB,cAAL,GAAsB,KAAtB;AACA,cAAQkB,KAAKkB,eAAb;AACA,aAAK9D,aAAaV,aAAlB;AACE,eAAKyE,kBAAL;AACA;AACF,aAAK/D,aAAaT,SAAlB;AACE,eAAKyE,cAAL,CAAoBpB,IAApB;AACA;AACF,aAAK5C,aAAaR,UAAlB;AACE,eAAKyE,eAAL,CAAqBrB,IAArB;AACA;AACF;AACE;AAXF;AAaD;;4BAEDmB,mDAAqB;AACnBP,gBAAU,KAAKjD,SAAL,CAAeO,YAAzB;AACD;;4BAEDkD,yCAAepB,MAAM;AAAA;;AACnBY,gBAAU,KAAKjD,SAAL,CAAeC,WAAzB;AACA,WAAKmB,aAAL,GAAqB,IAArB;AACA,WAAKI,MAAL,GAAc,IAAd;;AAEA,UAAMmC,gBAAgB,KAAK/B,gBAAL,EAAtB;AACA+B,oBAAcC,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACAC,iBAAW,YAAM;AACfH,sBAAcC,SAAd,CAAwBG,GAAxB,CAA4B,SAA5B;AACAD,mBAAW,YAAM;AACf,iBAAK1C,aAAL,GAAqB,KAArB;AACA,iBAAKI,MAAL,GAAc,IAAd;AACD,SAHD,EAGG,GAHH;AAID,OAND,EAMG,IANH;AAOD;;4BAEDkC,2CAAgBrB,MAAM;AAAA;;AACpBY,gBAAU,KAAKjD,SAAL,CAAeG,QAAzB;AACA,WAAKiB,aAAL,GAAqB,IAArB;AACA,WAAKI,MAAL,GAAc,KAAd;AACA,UAAMmC,gBAAgB,KAAK/B,gBAAL,EAAtB;;AAEA+B,oBAAcC,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACAC,iBAAW,YAAM;AACfH,sBAAcC,SAAd,CAAwBG,GAAxB,CAA4B,SAA5B;AACAD,mBAAW,YAAM;AACf,iBAAK1C,aAAL,GAAqB,KAArB;AACA,iBAAKI,MAAL,GAAc,IAAd;AACD,SAHD,EAGG,GAHH;AAID,OAND,EAMG,IANH;AAOD;;4BAIDuB,mDAAoBV,MAAM,CAEzB;;4BAED2B,2DAAyB;AACvBf,gBAAU,KAAKjD,SAAL,CAAeI,SAAzB;AACA,WAAK6D,WAAL;AACD;;4BAEDC,qDAAsB;AACpBjB,gBAAU,KAAKjD,SAAL,CAAeQ,QAAzB;AACA,WAAKA,QAAL;AACD;;4BAED2D,+CAAmB;AACjB,UAAI,KAAKC,aAAT,EAAwB;AACtB,aAAKC,QAAL;AACD;AACF;;4BAIDJ,qCAAc;AACZ,WAAKvC,WAAL,GAAmB,qBAAnB;AACA,WAAKT,iBAAL,GAAyB,IAAzB;AACA,UAAMqD,WAAW,KAAKC,eAAtB;AACA,UAAMC,UAAUC,iBAAiBhF,aAAaP,YAA9B,EAA4C,EAAEoF,kBAAF,EAA5C,CAAhB;AACA,WAAKI,YAAL,CAAkBF,OAAlB;AACD;;4BAEDhE,+BAAW;AACT,WAAKkB,WAAL,GAAmB,4BAAnB;AACA,WAAKR,oBAAL,GAA4B,IAA5B;AACA,WAAKI,kBAAL,GAA0B,KAA1B;AACA,WAAKD,WAAL,GAAmB,KAAnB;AACA,UAAMmD,UAAUC,iBAAiBhF,aAAaN,SAA9B,CAAhB;AACA,WAAKuF,YAAL,CAAkBF,OAAlB;AACD;;4BAEDH,+BAAW;AACT,WAAKlD,cAAL,GAAsB,IAAtB;AACA,UAAMqD,UAAUC,iBAAiBhF,aAAaL,SAA9B,EAAyC,EAAE+D,MAAM,KAAKA,IAAb,EAAzC,CAAhB;AACA,WAAKuB,YAAL,CAAkBF,OAAlB;AACD;;4BAyCDE,qCAAaF,SAAS;AACpBG,kBAAY,KAAK7C,YAAjB,EAA+B0C,OAA/B;AACD;;;;0BAvCuB;AACtB,eAAO,KAAKxD,oBAAL,IAA6B,CAAC,KAAKO,SAAnC,IAAgD,KAAKN,iBAArD,IAA0E,KAAKC,oBAAtF;AACD;;;0BAEsB;AACrB,eAAO,CAAC,KAAKF,oBAAN,IAA8B,CAAC,KAAKS,aAA3C;AACD;;;0BAEoB;AACnB,eAAO,CAAC,0BAAQ,KAAK8C,eAAb,CAAR;AACD;;;0BAEkB;AACjB,eAAO,KAAKjD,kBAAZ;AACD;;;0BAEsB;AACrB,eAAO,KAAKD,WAAZ;AACD;;;0BAEkB;AACjB,eAAO,KAAK2B,QAAZ;AACD;;;0BAKmB;AAClB,eAAO,CAAC,0BAAQ,KAAKG,IAAb,CAAR;AACD;;;0BAEyB;AACxB,eAAO,KAAKhC,cAAZ;AACD;;;;;;;aAvQ2B;;;;;aACX;;;;;AAgRnB,MAAM8B,YAAY,SAAZA,SAAY,CAAC2B,SAAD,EAAe;AAC/BA,cAAUC,SAAV,GAAsBC,IAAtB;AACD,GAFD;;AAIA,MAAMH,cAAc,SAAdA,WAAc,CAACI,MAAD,EAASP,OAAT,EAAqB;AACvCO,WAAOC,IAAP,CAAY1C,KAAK2C,SAAL,CAAeT,OAAf,CAAZ;AACD,GAFD;;AAIA,MAAMC,mBAAmB,SAAnBA,gBAAmB,CAAC/B,IAAD,EAAwB;AAAA,QAAjBwC,OAAiB,uEAAP,EAAO;;AAC/C;AACExC;AADF,OAEKwC,OAFL;AAID,GALD;;;;;;;;;;;;;;;;;;;;;;;;MCjSaC,wBAAAA;AACX,6BAAc;AAAA;;AACZ,WAAKxH,aAAL,GAAqB,sBAAYA,aAAjC;AACD;;4BAEDoE,6DAA0B;AACxB,aAAO,IAAIqD,SAAJ,CAAiB,KAAKzH,aAAtB,WAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCJU0H,kBAAAA,kBADZ;AAEC,qBAAYC,MAAZ,EAAoB;AAAA;;AAClB,WAAKA,MAAL,GAAcA,OAAO1H,SAAP,CAAiB;AAAA,eAAOX,IACnCsI,WADmC,CACvB,sBAAY7H,cADW,CAAP;AAAA,OAAjB,CAAd;AAGD;;sBAED8H,2CAAgBjE,WAAW;AACzB,aAAO,KAAK+D,MAAL,CACJG,aADI,cACqBlE,SADrB,EAEJmE,KAFI,EAAP;AAGD;;;;;;;;;;;;;;;;;;;;;MCZUC,oBAAAA,oBAFZ,uCAAgB,YAAhB,WACA,8BAAOhG,OAAP;AAIC,uBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA,WAFrBgG,YAEqB,GAFN,YAAM,CAAE,CAEF;;AACnB,WAAKhG,OAAL,GAAeA,OAAf;;AAEA,WAAKgG,YAAL,GAAoB,aAAK;AACvB,YAAIC,MAAMC,EAAEC,KAAF,IAAWD,EAAEE,OAAvB;AACA,YAAIH,QAAQ,EAAZ,EAAgB;AACd,gBAAKI,KAAL;AACD;AACF,OALD;AAMD;;wBAEDlG,+BAAW;AACT,WAAKH,OAAL,CAAasG,gBAAb,CAA8B,UAA9B,EAA0C,KAAKN,YAA/C;AACD;;wBAED9E,+BAAW;AACT,WAAKlB,OAAL,CAAauG,mBAAb,CAAiC,UAAjC,EAA6C,KAAKP,YAAlD;AACD;;;;;;;;;;;;;;;;;;;;;MCpBUD,oBAAAA,oBAFZ,uCAAgB,YAAhB,WACA,8BAAOhG,OAAP;AAEC,uBAAYC,OAAZ,EAAqB;AAAA;;AACnB,WAAKA,OAAL,GAAeA,OAAf;AACD;;wBAEDG,+BAAW;AACT,WAAKH,OAAL,CAAawG,KAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTH,MAAMC,eAAe,EAArB;;MAIaC,gBAAAA;;;;;;;;;;;;;oBAMXvG,+BAAW,CAAE;;;;;;aALEsG;;;;;aACAA;;;;;aACAA;;;;;aACAA;;;;;;;;;;;;;;;;;;;;MCNJE,mBAAAA,mBAFZ,uCAAgB,WAAhB,WACA,8BAAO5G,OAAP;AAEC,sBAAYC,OAAZ,EAAqB;AAAA;;AACnB,WAAKA,OAAL,GAAeA,OAAf;AACD;;uBAEDG,+BAAW;AACT,UAAMH,UAAU,KAAKA,OAArB;AACA,UAAI,CAACA,QAAQ4G,KAAb,EAAoB;AAClB5G,gBAAQ4G,KAAR,GAAgB,EAAhB;AACD;;AAED5G,cAAQ4G,KAAR,CAAc,aAAd,IAA+B,MAA/B;AACA5G,cAAQ4G,KAAR,CAAc,qBAAd,IAAuC,MAAvC;AACA5G,cAAQ4G,KAAR,CAAc,kBAAd,IAAoC,MAApC;AACA5G,cAAQ4G,KAAR,CAAc,iBAAd,IAAmC,MAAnC;AACA5G,cAAQ4G,KAAR,CAAcC,MAAd,GAAuB,SAAvB;AACD","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() { }\n\n  configureRouter(cfg, router) {\n    this.router = router;\n    cfg.title = 'Typerace';\n\n    cfg.map([\n      {\n        route: '',\n        name: 'game',\n        moduleId: 'containers/game-container/game-container'\n      }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  gatewayRootURL: 'https://localhost:8081',\n  socketRootURL: 'ws://localhost:8081'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","/* server messages */\r\n/* server events */\r\nexport const CONNECT_RESPONSE = 'CONNECT_RESPONSE';\r\nexport const SET_NICKNAME_RESPONSE = 'SET_NICKNAME_RESPONSE';\r\nexport const BROADCAST_WORD = 'BROADCAST_WORD';\r\nexport const TYPE_WORD_RESPONSE = 'TYPE_WORD_RESPONSE';\r\nexport const TERMINATE_GAME = 'TERMINATE_GAME';\r\n/* game events */\r\nexport const WORD_MISMATCH = 'WORD_MISMATCH';\r\nexport const ROUND_WON = 'ROUND_WON';\r\nexport const ROUND_LOST = 'ROUND_LOST';\r\n\r\n/* client messages */\r\nexport const SET_NICKNAME = 'SET_NICKNAME';\r\nexport const JOIN_GAME = 'JOIN_GAME';\r\nexport const TYPE_WORD = 'TYPE_WORD';\r\n","export function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","export function configure(config) {\n  config.globalResources([\n    './attributes/key-return',\n    './attributes/take-focus',\n    './attributes/no-select',\n    './elements/ui-wrappers/bs-row'\n  ]);\n}\n","import { inject, bindable } from 'aurelia-framework';\r\n\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\nimport { ConnectionAPI } from '../../gateways/connection/connection-api';\r\n\r\nimport { isEmpty } from '../../lib/string-utils';\r\nimport * as MessageTypes from '../../lib/message-types';\r\n\r\n@inject(Element, DataAPI, ConnectionAPI)\r\nexport class GameContainer {\r\n  @bindable currentNickname = '';\r\n  @bindable word = '';\r\n\r\n  constructor(element, dataAPI, connectionAPI) {\r\n    this.element = element;\r\n    this.dataAPI = dataAPI;\r\n    this.connectionAPI = connectionAPI;\r\n  }\r\n\r\n  attached() {\r\n    this.audioBank = {\r\n      victoryDing: new Audio('media/audio/victory-ding.ogg'),\r\n      lossDing: new Audio('media/audio/loss-ding.ogg'),\r\n      closeItem: new Audio('media/audio/close-item.ogg'),\r\n      loserPointDing: new Audio('media/audio/loser-point-ding.ogg'),\r\n      winnerPointDing: new Audio('media/audio/winner-point-ding.ogg'),\r\n      wordMismatch: new Audio('media/audio/word-mismatch.ogg'),\r\n      joinGame: new Audio('media/audio/join-game.ogg'),\r\n      opponentFound: new Audio('media/audio/opponent-found.ogg')\r\n    };\r\n\r\n    this.initStateModel();\r\n    this.initDOMHooks();\r\n    this.attachDOMListeners();\r\n\r\n    this.connectToServer();\r\n  }\r\n\r\n  detached() {\r\n    this.detachDOMListeners();\r\n  }\r\n\r\n  /* INITIALIZERS */\r\n  initStateModel() {\r\n    this.isConnectingToServer = false;\r\n    this.isSettingNickname = false;\r\n    this.isWaitingForOpponent = false;\r\n    this.isCheckingWord = false;\r\n\r\n    this.showWinStatus = false;\r\n    this.canJoinGame = false;\r\n    this.canDisplayTutorial = false;\r\n\r\n    this.sessionId = null;\r\n    this.didWin = null;\r\n    this.isNicknameSet = false;\r\n    this.loadingText = null;\r\n    this.currentScore = 0;\r\n  }\r\n\r\n  initDOMHooks() {\r\n    this.getVictoryBanner = () => (this.element.querySelector('#victory-banner'));\r\n  }\r\n\r\n  attachDOMListeners() {\r\n\r\n  }\r\n\r\n  detachDOMListeners() {\r\n\r\n  }\r\n\r\n  connectToServer() {\r\n    const serverSocket = this.serverSocket = this.connectionAPI.getGameSocketConnection();\r\n    this.hookUpServerSocket(serverSocket);\r\n  }\r\n\r\n  hookUpServerSocket(serverSocket) {\r\n    this.isConnectingToServer = true;\r\n    this.loadingText = 'Connecting to server...';\r\n    serverSocket.onopen = (event) => {\r\n      this.isConnectingToServer = false;\r\n    };\r\n\r\n    serverSocket.onclose = (event) => {\r\n      // TODO\r\n    };\r\n\r\n    serverSocket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(data);\r\n      switch (data.type) {\r\n      case MessageTypes.CONNECT_RESPONSE:\r\n        this.handleConnectResponse(data);\r\n        break;\r\n      case MessageTypes.SET_NICKNAME_RESPONSE:\r\n        this.handleSetNicknameResponse(data);\r\n        break;\r\n      case MessageTypes.BROADCAST_WORD:\r\n        this.handleBroadcastWord(data);\r\n        break;\r\n      case MessageTypes.TYPE_WORD_RESPONSE:\r\n        this.handleTypeWordResponse(data);\r\n        break;\r\n      case MessageTypes.TERMINATE_GAME:\r\n        this.handleTerminateGame(data);\r\n        break;\r\n      default:\r\n        break;\r\n      }\r\n    };\r\n  }\r\n  /* /INITIALIZERS */\r\n\r\n  /* SERVER MESSAGE HANDLERS */\r\n  handleConnectResponse(data) {\r\n    this.sessionId = data.sessionId;\r\n  }\r\n\r\n  handleSetNicknameResponse(data) {\r\n    this.isSettingNickname = false;\r\n    this.isNicknameSet = true;\r\n\r\n    this.canDisplayTutorial = true;\r\n    this.canJoinGame = true;\r\n    this.isInGame = false;\r\n  }\r\n\r\n  handleBroadcastWord(data) {\r\n    playAudio(this.audioBank.opponentFound);\r\n\r\n    this.isWaitingForOpponent = false;\r\n    this.currentWord = data.word;\r\n    this.currentOpponent = data.opponentNickname;\r\n    this.isInGame = true;\r\n    this.hasNotSentWord = true;\r\n  }\r\n\r\n  handleTypeWordResponse(data) {\r\n    this.isCheckingWord = false;\r\n    switch (data.gameMessageType) {\r\n    case MessageTypes.WORD_MISMATCH:\r\n      this.handleWordMismatch();\r\n      break;\r\n    case MessageTypes.ROUND_WON:\r\n      this.handleRoundWon(data);\r\n      break;\r\n    case MessageTypes.ROUND_LOST:\r\n      this.handleRoundLost(data);\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWordMismatch() {\r\n    playAudio(this.audioBank.wordMismatch);\r\n  }\r\n\r\n  handleRoundWon(data) {\r\n    playAudio(this.audioBank.victoryDing);\r\n    this.showWinStatus = true;\r\n    this.didWin = true;\r\n\r\n    const victoryBanner = this.getVictoryBanner();\r\n    victoryBanner.classList.remove('fadeOut');\r\n    setTimeout(() => {\r\n      victoryBanner.classList.add('fadeOut');\r\n      setTimeout(() => {\r\n        this.showWinStatus = false;\r\n        this.didWin = null;\r\n      }, 500);\r\n    }, 1000);\r\n  }\r\n\r\n  handleRoundLost(data) {\r\n    playAudio(this.audioBank.lossDing);\r\n    this.showWinStatus = true;\r\n    this.didWin = false;\r\n    const victoryBanner = this.getVictoryBanner();\r\n\r\n    victoryBanner.classList.remove('fadeOut');\r\n    setTimeout(() => {\r\n      victoryBanner.classList.add('fadeOut');\r\n      setTimeout(() => {\r\n        this.showWinStatus = false;\r\n        this.didWin = null;\r\n      }, 500);\r\n    }, 1000);\r\n  }\r\n  /* /SERVER MESSAGE HANDLERS */\r\n\r\n  /* USER INTERACTION HANDLERS */\r\n  handleTerminateGame(data) {\r\n    // TODO\r\n  }\r\n\r\n  handleSetNicknameClick() {\r\n    playAudio(this.audioBank.closeItem);\r\n    this.setNickname();\r\n  }\r\n\r\n  handleJoinGameClick() {\r\n    playAudio(this.audioBank.joinGame);\r\n    this.joinGame();\r\n  }\r\n\r\n  handleWordSubmit() {\r\n    if (this.canSubmitWord) {\r\n      this.sendWord();\r\n    }\r\n  }\r\n  /* /USER INTERACTION HANDLERS */\r\n\r\n  /* APP LOGIC */\r\n  setNickname() {\r\n    this.loadingText = 'Setting nickname...';\r\n    this.isSettingNickname = true;\r\n    const nickname = this.currentNickname;\r\n    const message = constructMessage(MessageTypes.SET_NICKNAME, { nickname });\r\n    this.sendToServer(message);\r\n  }\r\n\r\n  joinGame() {\r\n    this.loadingText = 'Waiting for an opponent...';\r\n    this.isWaitingForOpponent = true;\r\n    this.canDisplayTutorial = false;\r\n    this.canJoinGame = false;\r\n    const message = constructMessage(MessageTypes.JOIN_GAME);\r\n    this.sendToServer(message);\r\n  }\r\n\r\n  sendWord() {\r\n    this.isCheckingWord = true;\r\n    const message = constructMessage(MessageTypes.TYPE_WORD, { word: this.word });\r\n    this.sendToServer(message);\r\n  }\r\n  /* /APP LOGIC */\r\n\r\n  /* VISIBLITY LOGIC */\r\n  get showLoadingBanner() {\r\n    return this.isConnectingToServer || !this.sessionId || this.isSettingNickname || this.isWaitingForOpponent;\r\n  }\r\n\r\n  get showNicknameForm() {\r\n    return !this.isConnectingToServer && !this.isNicknameSet;\r\n  }\r\n\r\n  get canSetNickname() {\r\n    return !isEmpty(this.currentNickname);\r\n  }\r\n\r\n  get showTutorial() {\r\n    return this.canDisplayTutorial;\r\n  }\r\n\r\n  get showJoinGameForm() {\r\n    return this.canJoinGame;\r\n  }\r\n\r\n  get showGameArea() {\r\n    return this.isInGame;\r\n  }\r\n\r\n  /* /VISIBLITY LOGIC */\r\n\r\n  /* GATEWAY LOGIC */\r\n  get canSubmitWord() {\r\n    return !isEmpty(this.word);\r\n  }\r\n\r\n  get isWordInputDisabled() {\r\n    return this.isCheckingWord;\r\n  }\r\n  /* /GATEWAY LOGIC /\r\n\r\n  /* SHARED UTILS */\r\n  sendToServer(message) {\r\n    sendMessage(this.serverSocket, message);\r\n  }\r\n  /* /SHARED UTILS */\r\n}\r\n\r\nconst playAudio = (audioNode) => {\r\n  audioNode.cloneNode().play();\r\n};\r\n\r\nconst sendMessage = (socket, message) => {\r\n  socket.send(JSON.stringify(message));\r\n};\r\n\r\nconst constructMessage = (type, content = {}) => {\r\n  return {\r\n    type,\r\n    ...content\r\n  };\r\n};\r\n","import environment from '../../environment';\r\n\r\nexport class ConnectionAPI {\r\n  constructor() {\r\n    this.socketRootURL = environment.socketRootURL;\r\n  }\r\n\r\n  getGameSocketConnection() {\r\n    return new WebSocket(`${this.socketRootURL}/game`);\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getScoreRequest(sessionId) {\r\n    return this.client\r\n      .createRequest(`/scores/${sessionId}`)\r\n      .asGet();\r\n  }\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('key-return')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  enterPressed = () => {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n\r\n    this.enterPressed = e => {\r\n      let key = e.which || e.keyCode;\r\n      if (key === 13) {\r\n        this.value();\r\n      }\r\n    };\r\n  }\r\n\r\n  attached() {\r\n    this.element.addEventListener('keypress', this.enterPressed);\r\n  }\r\n\r\n  detached() {\r\n    this.element.removeEventListener('keypress', this.enterPressed);\r\n  }\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('take-focus')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    this.element.focus();\r\n  }\r\n}\r\n","import { bindable, containerless } from 'aurelia-framework';\r\n\r\nconst DEFAULT_SIZE = 12;\r\n\r\n/* Bootstrap row wrapper */\r\n@containerless\r\nexport class BsRow {\r\n  @bindable lg = DEFAULT_SIZE;\r\n  @bindable md = DEFAULT_SIZE;\r\n  @bindable sm = DEFAULT_SIZE;\r\n  @bindable xs = DEFAULT_SIZE;\r\n\r\n  attached() {}\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('no-select')\r\n@inject(Element)\r\nexport class NoSelect {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    const element = this.element;\r\n    if (!element.style) {\r\n      element.style = {};\r\n    }\r\n\r\n    element.style['user-select'] = 'none';\r\n    element.style['-webkit-user-select'] = 'none';\r\n    element.style['-moz-user-select'] = 'none';\r\n    element.style['-ms-user-select'] = 'none';\r\n    element.style.cursor = 'default';\r\n  }\r\n}\r\n"],"sourceRoot":".."}