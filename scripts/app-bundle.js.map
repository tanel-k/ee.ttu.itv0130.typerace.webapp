{"version":3,"sources":["app.js","environment.js","main.js","events/event-types.js","lib/message-types.js","lib/string-utils.js","lib/time-utils.js","resources/index.js","components/history-sidebar/history-sidebar.js","components/page-locker/page-locker.js","containers/game-container/game-container.js","gateways/connection/connection-api.js","gateways/data/data-api.js","resources/attributes/key-return.js","resources/attributes/no-select.js","resources/attributes/take-focus.js","resources/elements/ui-wrappers/bs-row.js"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","socketRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","NewScore","scoreData","CONNECT_RESPONSE","SET_NICKNAME_RESPONSE","BROADCAST_WORD","TYPE_WORD_RESPONSE","TERMINATE_GAME","WORD_MISMATCH","ROUND_WON","ROUND_LOST","SET_NICKNAME","JOIN_GAME","TYPE_WORD","isEmpty","val","trim","formatSeconds","seconds","secondsLeft","parseInt","hours","minutes","hourString","formatTimePart","minuteString","secondString","part","unit","pad","globalResources","eventTypes","HistorySidebar","Element","element","ea","attached","initStateModel","initDOMHooks","attachEventListeners","isActive","scoreEntries","historyContainer","querySelector","closeButton","historyIcon","$historyIcon","$","addEventListener","activateHistoryContainer","event","stopPropagation","deactivateHistoryContainer","subscribe","addScoreEntry","effect","times","classList","add","overlayDiv","document","createElement","body","appendChild","remove","removeChild","opponentTimeMillis","playerTimeMillis","word","push","playerTimeString","formatMillis","opponentTimeString","didWin","reduce","prevValue","currEntry","length","winCount","millis","PageLocker","MessageTypes","GameContainer","eventAggregator","dataAPI","connectionAPI","audioBank","victoryDing","Audio","lossDing","closeItem","loserPointDing","winnerPointDing","wordMismatch","joinGame","opponentFound","opponentLeft","attachDOMListeners","connectToServer","detached","detachDOMListeners","isApplicationLocked","isConnectingToServer","isSettingNickname","isWaitingForOpponent","isWaitingForNextRound","isCheckingWord","hasJoinedGameAtLeastOnce","isInRound","showWinStatus","showMessageBanner","canJoinGame","canDisplayTutorial","isInGame","lastScoreIndex","currentOpponent","sessionId","isNicknameSet","loadingText","currentMessage","challengeWaitText","currentScore","getVictoryBanner","getMessageBanner","getScoreWrapper","getVictoryTextContainer","serverSocket","getGameSocketConnection","hookUpServerSocket","onopen","console","log","onclose","onerror","onmessage","data","JSON","parse","type","handleConnectResponse","handleSetNicknameResponse","handleBroadcastWord","handleTypeWordResponse","handleTerminateGame","playAudio","currentWord","opponentNickname","hasNotSentWord","getScoreRequest","send","response","roundScores","content","forEach","roundScore","publish","index","catch","err","gameMessageType","handleWordMismatch","handleRoundWon","handleRoundLost","messageBannerHideTimeout","clearTimeout","flashMessage","handleRoundEnd","setTimeout","victory","typedWord","victoryBanner","transferPoints","playerScore","points","scoreWrapper","victoryTextContainer","$scoreWrapper","$victoryTextContainer","startTopOffset","offset","top","startLeftOffset","left","endTopOffset","endLeftOffset","starIcon","pointsDiv","pointsDivCss","color","css","starIconCss","position","style","moveStar","amount","$starIcon","cloneNode","Object","assign","opacity","appendTo","animate","$pointsDiv","text","addClass","i","transfers","handleSetNicknameClick","currentNickname","setNickname","handleJoinGameClick","handleWordSubmit","canSubmitWord","sendWord","nickname","message","constructMessage","sendToServer","sendMessage","durationMillis","messageBanner","showCurrentScore","slice","audioNode","play","socket","stringify","ConnectionAPI","WebSocket","DataAPI","client","withBaseUrl","afterIndex","createRequest","asGet","KeyReturn","enterPressed","key","e","which","keyCode","value","removeEventListener","NoSelect","cursor","focus","DEFAULT_SIZE","BsRow"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() { }\n\n  configureRouter(cfg, router) {\n    this.router = router;\n    cfg.title = 'Typerace';\n\n    cfg.map([\n      {\n        route: '',\n        name: 'game',\n        moduleId: 'containers/game-container/game-container'\n      }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  gatewayRootURL: 'http://localhost:8080',\n  socketRootURL: 'ws://localhost:8080'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NewScore {\r\n  constructor(scoreData) {\r\n    this.scoreData = scoreData;\r\n  }\r\n}\r\n","/* server messages */\r\n/* server events */\r\nexport const CONNECT_RESPONSE = 'CONNECT_RESPONSE';\r\nexport const SET_NICKNAME_RESPONSE = 'SET_NICKNAME_RESPONSE';\r\nexport const BROADCAST_WORD = 'BROADCAST_WORD';\r\nexport const TYPE_WORD_RESPONSE = 'TYPE_WORD_RESPONSE';\r\nexport const TERMINATE_GAME = 'TERMINATE_GAME';\r\n/* game events */\r\nexport const WORD_MISMATCH = 'WORD_MISMATCH';\r\nexport const ROUND_WON = 'ROUND_WON';\r\nexport const ROUND_LOST = 'ROUND_LOST';\r\n\r\n/* client messages */\r\nexport const SET_NICKNAME = 'SET_NICKNAME';\r\nexport const JOIN_GAME = 'JOIN_GAME';\r\nexport const TYPE_WORD = 'TYPE_WORD';\r\n","export function isEmpty(val) {\r\n  return !val || !val.trim();\r\n}\r\n","export const formatSeconds = (seconds) => {\r\n  let secondsLeft = parseInt(seconds, 10);\r\n  const hours = parseInt(seconds / 3600, 10);\r\n  secondsLeft = secondsLeft % 3600;\r\n  const minutes = parseInt(secondsLeft / 60, 10);\r\n  secondsLeft = secondsLeft % 60;\r\n\r\n  const hourString = formatTimePart(hours, 'hour', ' ');\r\n  const minuteString = formatTimePart(minutes, 'minute', ' ');\r\n  const secondString = formatTimePart(secondsLeft, 'second', ' ');\r\n\r\n  return hourString + minuteString + secondString;\r\n};\r\n\r\nexport const formatTimePart = (part, unit, pad = '') => {\r\n  if (!part) {\r\n    return '';\r\n  }\r\n\r\n  if (part > 1) {\r\n    return `${pad}${part} ${unit}s${pad}`;\r\n  }\r\n\r\n  return `${pad}${part} ${unit}${pad}`;\r\n};\r\n","export function configure(config) {\n  config.globalResources([\n    './attributes/key-return',\n    './attributes/take-focus',\n    './attributes/no-select',\n    './elements/ui-wrappers/bs-row'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport * as eventTypes from '../../events/event-types';\r\nimport { formatSeconds } from '../../lib/time-utils';\r\n\r\n@inject(Element, EventAggregator)\r\nexport class HistorySidebar {\r\n  constructor(element, ea) {\r\n    this.element = element;\r\n    this.ea = ea;\r\n  }\r\n\r\n  attached() {\r\n    this.initStateModel();\r\n    this.initDOMHooks();\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  initStateModel() {\r\n    this.isActive = false;\r\n    this.scoreEntries = [];\r\n  }\r\n\r\n  initDOMHooks() {\r\n    this.historyContainer = this.element.querySelector('.history-container');\r\n    this.closeButton = this.element.querySelector('.close-history-button');\r\n    this.historyIcon = this.element.querySelector('.history-icon');\r\n    this.$historyIcon = $(this.historyIcon);\r\n  }\r\n\r\n  get winCount() {\r\n    if (!this.scoreEntries) {\r\n      return 0;\r\n    }\r\n\r\n    return this.scoreEntries.reduce((prevValue, currEntry) => {\r\n      if (currEntry.didWin) {\r\n        return prevValue + 1;\r\n      }\r\n\r\n      return prevValue;\r\n    }, 0);\r\n  }\r\n\r\n  get lossCount() {\r\n    if (!this.scoreEntries) {\r\n      return 0;\r\n    }\r\n\r\n    return this.scoreEntries.length - this.winCount;\r\n  }\r\n\r\n  attachEventListeners() {\r\n    this.historyContainer.addEventListener('click', () => this.activateHistoryContainer());\r\n    this.closeButton.addEventListener('click', (event) =>  {\r\n      event.stopPropagation();\r\n      this.deactivateHistoryContainer();\r\n    });\r\n\r\n    this.ea.subscribe(eventTypes.NewScore, event => {\r\n      this.addScoreEntry(event.scoreData);\r\n      this.$historyIcon.effect('highlight', { times: 1 }, 500);\r\n    });\r\n  }\r\n\r\n  activateHistoryContainer() {\r\n    if (!this.isActive) {\r\n      this.historyContainer.classList.add('active');\r\n      const overlayDiv = document.createElement('div');\r\n      overlayDiv.classList.add('page-overlay');\r\n      document.body.appendChild(overlayDiv);\r\n      overlayDiv.addEventListener('click', () => this.deactivateHistoryContainer());\r\n      this.isActive = true;\r\n    }\r\n  }\r\n\r\n  deactivateHistoryContainer() {\r\n    if (this.isActive) {\r\n      this.historyContainer.classList.remove('active');\r\n      const overlayDiv = document.querySelector('.page-overlay');\r\n      if (overlayDiv) {\r\n        document.body.removeChild(overlayDiv);\r\n      }\r\n      this.isActive = false;\r\n    }\r\n  }\r\n\r\n  addScoreEntry({ opponentTimeMillis, playerTimeMillis, word}) {\r\n    this.scoreEntries.push({\r\n      word,\r\n      playerTimeString: formatMillis(playerTimeMillis),\r\n      opponentTimeString: formatMillis(opponentTimeMillis),\r\n      didWin: opponentTimeMillis > playerTimeMillis\r\n    });\r\n  }\r\n}\r\n\r\nconst formatMillis = (millis) => (formatSeconds(millis / 1000));\r\n","export class PageLocker {\r\n\r\n}\r\n","import { inject, bindable } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\nimport { ConnectionAPI } from '../../gateways/connection/connection-api';\r\n\r\nimport { isEmpty } from '../../lib/string-utils';\r\nimport * as eventTypes from '../../events/event-types';\r\nimport * as MessageTypes from '../../lib/message-types';\r\n\r\n@inject(Element, EventAggregator, DataAPI, ConnectionAPI)\r\nexport class GameContainer {\r\n  @bindable currentNickname = '';\r\n  @bindable word = '';\r\n\r\n  constructor(element, eventAggregator, dataAPI, connectionAPI) {\r\n    this.element = element;\r\n    this.eventAggregator = eventAggregator;\r\n    this.dataAPI = dataAPI;\r\n    this.connectionAPI = connectionAPI;\r\n\r\n    this.initStateModel();\r\n  }\r\n\r\n  attached() {\r\n    this.audioBank = {\r\n      victoryDing: new Audio('media/audio/victory-ding.ogg'),\r\n      lossDing: new Audio('media/audio/loss-ding.ogg'),\r\n      closeItem: new Audio('media/audio/close-item.ogg'),\r\n      loserPointDing: new Audio('media/audio/loser-point-ding.ogg'),\r\n      winnerPointDing: new Audio('media/audio/winner-point-ding.ogg'),\r\n      wordMismatch: new Audio('media/audio/word-mismatch.ogg'),\r\n      joinGame: new Audio('media/audio/join-game.ogg'),\r\n      opponentFound: new Audio('media/audio/opponent-found.ogg'),\r\n      opponentLeft: new Audio('media/audio/opponent-left.ogg')\r\n    };\r\n\r\n    this.initStateModel();\r\n    this.initDOMHooks();\r\n    this.attachDOMListeners();\r\n\r\n    this.connectToServer();\r\n  }\r\n\r\n  detached() {\r\n    this.detachDOMListeners();\r\n  }\r\n\r\n  /* INITIALIZERS */\r\n  initStateModel() {\r\n    /* set to true right away to avoid displaying nickname form */\r\n    this.isApplicationLocked = false;\r\n    this.isConnectingToServer = true;\r\n    this.isSettingNickname = false;\r\n    this.isWaitingForOpponent = false;\r\n    this.isWaitingForNextRound = false;\r\n    this.isCheckingWord = false;\r\n    this.hasJoinedGameAtLeastOnce = false;\r\n\r\n    this.isInRound = true;\r\n    this.showWinStatus = false;\r\n    this.showMessageBanner = false;\r\n    this.canJoinGame = false;\r\n    this.canDisplayTutorial = false;\r\n\r\n    this.isInGame = false;\r\n    this.lastScoreIndex = null;\r\n    this.currentOpponent = null;\r\n    this.sessionId = null;\r\n    this.didWin = null;\r\n    this.isNicknameSet = false;\r\n    this.loadingText = null;\r\n    this.currentMessage = null;\r\n    this.challengeWaitText = null;\r\n    this.currentScore = 0;\r\n  }\r\n\r\n  initDOMHooks() {\r\n    this.getVictoryBanner = () => (this.element.querySelector('#victory-banner'));\r\n    this.getMessageBanner = () => (this.element.querySelector('#message-banner'));\r\n    this.getScoreWrapper = () => (this.element.querySelector('#score-wrapper'));\r\n    this.getVictoryTextContainer = () => (this.element.querySelector('#victory-text-container'));\r\n  }\r\n\r\n  attachDOMListeners() {}\r\n\r\n  detachDOMListeners() {}\r\n\r\n  connectToServer() {\r\n    const serverSocket = this.serverSocket = this.connectionAPI.getGameSocketConnection();\r\n    this.hookUpServerSocket(serverSocket);\r\n  }\r\n\r\n  hookUpServerSocket(serverSocket) {\r\n    this.isConnectingToServer = true;\r\n    this.loadingText = 'Connecting to server...';\r\n    serverSocket.onopen = (event) => {\r\n      console.log(event);\r\n      this.isConnectingToServer = false;\r\n    };\r\n\r\n    serverSocket.onclose = (event) => {\r\n      // lock page\r\n      console.log(event);\r\n      this.isApplicationLocked = true;\r\n    };\r\n\r\n    serverSocket.onerror = () => {\r\n      // lock page\r\n      this.isApplicationLocked = true;\r\n    };\r\n\r\n    serverSocket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n\r\n      switch (data.type) {\r\n      case MessageTypes.CONNECT_RESPONSE:\r\n        this.handleConnectResponse(data);\r\n        break;\r\n      case MessageTypes.SET_NICKNAME_RESPONSE:\r\n        this.handleSetNicknameResponse(data);\r\n        break;\r\n      case MessageTypes.BROADCAST_WORD:\r\n        this.handleBroadcastWord(data);\r\n        break;\r\n      case MessageTypes.TYPE_WORD_RESPONSE:\r\n        this.handleTypeWordResponse(data);\r\n        break;\r\n      case MessageTypes.TERMINATE_GAME:\r\n        this.handleTerminateGame(data);\r\n        break;\r\n      default:\r\n        break;\r\n      }\r\n    };\r\n  }\r\n  /* /INITIALIZERS */\r\n\r\n  /* SERVER MESSAGE HANDLERS */\r\n  handleConnectResponse(data) {\r\n    this.sessionId = data.sessionId;\r\n  }\r\n\r\n  handleSetNicknameResponse(data) {\r\n    this.isSettingNickname = false;\r\n    this.isNicknameSet = true;\r\n\r\n    this.canDisplayTutorial = true;\r\n    this.canJoinGame = true;\r\n    this.isInGame = false;\r\n  }\r\n\r\n  handleBroadcastWord(data) {\r\n    playAudio(this.audioBank.opponentFound);\r\n\r\n    this.hasJoinedGameAtLeastOnce = true;\r\n    this.isWaitingForOpponent = false;\r\n    this.isWaitingForNextRound = false;\r\n    this.isInRound = true;\r\n    this.currentWord = data.word;\r\n    this.currentOpponent = data.opponentNickname;\r\n    this.isInGame = true;\r\n    this.hasNotSentWord = true;\r\n\r\n    this.dataAPI.getScoreRequest(this.sessionId, this.lastScoreIndex || '0')\r\n    .send()\r\n    .then((response) => {\r\n      const { roundScores } = response.content;\r\n\r\n      roundScores.forEach((roundScore) => {\r\n        this.eventAggregator.publish(new eventTypes.NewScore(roundScore));\r\n        this.lastScoreIndex = roundScore.index;\r\n      });\r\n    })\r\n    .catch((err) => {});\r\n  }\r\n\r\n  handleTypeWordResponse(data) {\r\n    this.isCheckingWord = false;\r\n    switch (data.gameMessageType) {\r\n    case MessageTypes.WORD_MISMATCH:\r\n      this.handleWordMismatch();\r\n      break;\r\n    case MessageTypes.ROUND_WON:\r\n      this.handleRoundWon(data);\r\n      break;\r\n    case MessageTypes.ROUND_LOST:\r\n      this.handleRoundLost(data);\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWordMismatch() {\r\n    if (this.messageBannerHideTimeout) {\r\n      clearTimeout(this.messageBannerHideTimeout);\r\n    }\r\n\r\n    playAudio(this.audioBank.wordMismatch);\r\n    this.flashMessage('Try again!', 1000);\r\n  }\r\n\r\n  handleRoundWon(data) {\r\n    this.handleRoundEnd(data, true);\r\n  }\r\n\r\n  handleRoundLost(data) {\r\n    this.handleRoundEnd(data, false);\r\n  }\r\n\r\n  handleTerminateGame(data) {\r\n    playAudio(this.audioBank.opponentLeft);\r\n    this.isInGame = false;\r\n    this.isInRound = false;\r\n    this.currentOpponent = null;\r\n    this.flashMessage('Your opponent left!', 2000);\r\n    setTimeout(() => this.canJoinGame = true, 2000);\r\n  }\r\n\r\n  handleRoundEnd(data, victory) {\r\n    if (victory) {\r\n      playAudio(this.audioBank.victoryDing);\r\n    } else {\r\n      playAudio(this.audioBank.lossDing);\r\n    }\r\n\r\n    this.showMessageBanner = false;\r\n    this.isInRound = false;\r\n    this.showWinStatus = true;\r\n    this.challengeWaitText = victory\r\n     ? 'Waiting for opponent to finish...'\r\n     : 'Waiting for next challenge...';\r\n    this.didWin = victory;\r\n    this.typedWord = '';\r\n\r\n    const victoryBanner = this.getVictoryBanner();\r\n    victoryBanner.classList.remove('fadeOut');\r\n\r\n    setTimeout(() => this.transferPoints(data.playerScore, victory), 500);\r\n\r\n    setTimeout(() => {\r\n      victoryBanner.classList.add('fadeOut');\r\n      setTimeout(() => {\r\n        this.showWinStatus = false;\r\n        this.isWaitingForNextRound = true;\r\n        this.didWin = null;\r\n      }, 500);\r\n    }, 1000);\r\n  }\r\n\r\n  transferPoints(points, victory) {\r\n    const scoreWrapper = this.getScoreWrapper();\r\n    const victoryTextContainer = this.getVictoryTextContainer();\r\n\r\n    const $scoreWrapper = $(scoreWrapper);\r\n    const $victoryTextContainer = $(victoryTextContainer);\r\n\r\n    const startTopOffset = $victoryTextContainer.offset().top + 20;\r\n    const startLeftOffset = $victoryTextContainer.offset().left + 85;\r\n    const endTopOffset = $scoreWrapper.offset().top;\r\n    const endLeftOffset = $scoreWrapper.offset().left;\r\n    const starIcon = document.createElement('i');\r\n    const pointsDiv = document.createElement('div');\r\n\r\n    const pointsDivCss = {\r\n      color: 'green',\r\n      'font-weight': 'bold',\r\n      'font-size': '13px'\r\n    };\r\n    pointsDiv.css = pointsDivCss;\r\n\r\n    starIcon.classList.add('fa');\r\n    starIcon.classList.add('fa-star');\r\n    const starIconCss =  {\r\n      'font-size': '24px',\r\n      position: 'absolute'\r\n    };\r\n    starIcon.style = starIconCss;\r\n\r\n    const moveStar = (color, amount) => {\r\n      const $starIcon = $(starIcon.cloneNode());\r\n      $starIcon\r\n        .offset({\r\n          top: startTopOffset,\r\n          left: startLeftOffset\r\n        })\r\n        .css(Object.assign({\r\n          opacity: '0.5',\r\n          color,\r\n          position: 'absolute',\r\n          'z-index': '100'\r\n        }, starIconCss))\r\n        .appendTo($('body'))\r\n        .animate({\r\n          'top': endTopOffset,\r\n          'left': endLeftOffset\r\n        }, 500, 'easeInOutExpo', () => {\r\n          if (victory) {\r\n            playAudio(this.audioBank.winnerPointDing);\r\n          } else {\r\n            playAudio(this.audioBank.loserPointDing);\r\n          }\r\n\r\n          $scoreWrapper.effect('bounce', { times: victory ? 2 : 1 }, 100);\r\n          $starIcon.remove();\r\n          this.currentScore += amount;\r\n          const $pointsDiv = $(pointsDiv.cloneNode());\r\n          $pointsDiv\r\n            .text(`+${amount}`)\r\n            .css(Object.assign({\r\n              opacity: '0.5',\r\n              color,\r\n              position: 'absolute',\r\n              'z-index': '100'\r\n            }, pointsDivCss))\r\n            .offset({\r\n              top: endTopOffset,\r\n              left: endLeftOffset\r\n            })\r\n            .appendTo($('body'))\r\n            .addClass('animated fadeOutUp');\r\n          setTimeout(() => $pointsDiv.remove(), 500);\r\n        });\r\n    };\r\n\r\n    let i = 1;\r\n    let color;\r\n    let transfers;\r\n    let amount;\r\n    if (victory) {\r\n      color = 'gold';\r\n      amount = 10;\r\n      transfers = points / 10;\r\n    } else {\r\n      // bronze\r\n      color = '#CD7F32';\r\n      amount = 1;\r\n      transfers = points;\r\n    }\r\n\r\n    while (transfers-- > 0) {\r\n      setTimeout(() => moveStar(color, amount), 150 * i++);\r\n    }\r\n  }\r\n  /* /SERVER MESSAGE HANDLERS */\r\n\r\n  /* USER INTERACTION HANDLERS */\r\n  handleSetNicknameClick() {\r\n    if (this.currentNickname) {\r\n      playAudio(this.audioBank.closeItem);\r\n      this.setNickname();\r\n    }\r\n  }\r\n\r\n  handleJoinGameClick() {\r\n    playAudio(this.audioBank.joinGame);\r\n    this.joinGame();\r\n  }\r\n\r\n  handleWordSubmit() {\r\n    if (this.canSubmitWord) {\r\n      this.sendWord();\r\n    } else {\r\n      this.handleWordMismatch();\r\n    }\r\n  }\r\n  /* /USER INTERACTION HANDLERS */\r\n\r\n  /* APP LOGIC */\r\n  setNickname() {\r\n    this.loadingText = 'Setting nickname...';\r\n    this.isSettingNickname = true;\r\n    const nickname = this.currentNickname;\r\n    const message = constructMessage(MessageTypes.SET_NICKNAME, { nickname });\r\n    this.sendToServer(message);\r\n  }\r\n\r\n  joinGame() {\r\n    this.loadingText = 'Waiting for an opponent...';\r\n    this.isWaitingForOpponent = true;\r\n    this.canDisplayTutorial = false;\r\n    this.canJoinGame = false;\r\n    const message = constructMessage(MessageTypes.JOIN_GAME);\r\n    this.sendToServer(message);\r\n  }\r\n\r\n  sendWord() {\r\n    this.isCheckingWord = true;\r\n    const message = constructMessage(MessageTypes.TYPE_WORD, { word: this.typedWord });\r\n    this.sendToServer(message);\r\n  }\r\n  /* /APP LOGIC */\r\n\r\n  /* VISIBLITY LOGIC */\r\n  get showLoadingBanner() {\r\n    return this.isConnectingToServer || !this.sessionId || this.isSettingNickname || this.isWaitingForOpponent;\r\n  }\r\n\r\n  get showNicknameForm() {\r\n    return !this.isConnectingToServer && !this.isNicknameSet;\r\n  }\r\n\r\n  get canSetNickname() {\r\n    return !isEmpty(this.currentNickname);\r\n  }\r\n\r\n  get showTutorial() {\r\n    return this.canDisplayTutorial;\r\n  }\r\n\r\n  get showJoinGameForm() {\r\n    return this.canJoinGame;\r\n  }\r\n\r\n  get showGameArea() {\r\n    return this.isInGame && !this.isConnectingToServer;\r\n  }\r\n\r\n  get showCurrentScore() {\r\n    return this.isInGame || this.hasJoinedGameAtLeastOnce;\r\n  }\r\n\r\n  get showChallengeArea() {\r\n    return this.isInRound && !this.isWaitingForNextRound;\r\n  }\r\n\r\n  get showChallengeWaitArea() {\r\n    return !this.isInRound && this.isWaitingForNextRound;\r\n  }\r\n\r\n  get showHistorySidebar() {\r\n    return this.showCurrentScore;\r\n  }\r\n  /* /VISIBLITY LOGIC */\r\n\r\n  /* DISPLAY FORMAT LOGIC */\r\n  get currentScoreString() {\r\n    return ('0000' + this.currentScore).slice(-5);\r\n  }\r\n  /* /DISPLAY FORMAT LOGIC */\r\n\r\n  /* GATEWAY LOGIC */\r\n  get canSubmitWord() {\r\n    return !isEmpty(this.typedWord);\r\n  }\r\n\r\n  get isWordInputDisabled() {\r\n    return this.isCheckingWord;\r\n  }\r\n  /* /GATEWAY LOGIC /\r\n\r\n  /* SHARED UTILS */\r\n  sendToServer(message) {\r\n    sendMessage(this.serverSocket, message);\r\n  }\r\n\r\n  flashMessage(message, durationMillis = 1000) {\r\n    this.showMessageBanner = true;\r\n    this.currentMessage = message;\r\n\r\n    const messageBanner = this.getMessageBanner();\r\n    messageBanner.classList.remove('fadeOut');\r\n    this.messageBannerHideTimeout = setTimeout(() => {\r\n      messageBanner.classList.add('fadeOut');\r\n      this.messageBannerHideTimeout = setTimeout(() => {\r\n        this.showMessageBanner = false;\r\n      }, parseInt(durationMillis * 0.5, 10));\r\n    }, parseInt(durationMillis * 0.5, 10));\r\n  }\r\n  /* /SHARED UTILS */\r\n}\r\n\r\nconst playAudio = (audioNode) => {\r\n  audioNode.cloneNode().play();\r\n};\r\n\r\nconst sendMessage = (socket, message) => {\r\n  socket.send(JSON.stringify(message));\r\n};\r\n\r\nconst constructMessage = (type, content = {}) => {\r\n  return {\r\n    type,\r\n    ...content\r\n  };\r\n};\r\n","import environment from '../../environment';\r\n\r\nexport class ConnectionAPI {\r\n  constructor() {\r\n    this.socketRootURL = environment.socketRootURL;\r\n  }\r\n\r\n  getGameSocketConnection() {\r\n    return new WebSocket(`${this.socketRootURL}/game`);\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getScoreRequest(sessionId, afterIndex = '0') {\r\n    return this.client\r\n      .createRequest(`/scores/${sessionId}?afterIndex=${afterIndex}`)\r\n      .asGet();\r\n  }\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('key-return')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  enterPressed = () => {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n\r\n    this.enterPressed = e => {\r\n      let key = e.which || e.keyCode;\r\n      if (key === 13) {\r\n        this.value();\r\n      }\r\n    };\r\n  }\r\n\r\n  attached() {\r\n    this.element.addEventListener('keypress', this.enterPressed);\r\n  }\r\n\r\n  detached() {\r\n    this.element.removeEventListener('keypress', this.enterPressed);\r\n  }\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('no-select')\r\n@inject(Element)\r\nexport class NoSelect {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    const element = this.element;\r\n    if (!element.style) {\r\n      element.style = {};\r\n    }\r\n\r\n    element.style['user-select'] = 'none';\r\n    element.style['-webkit-user-select'] = 'none';\r\n    element.style['-moz-user-select'] = 'none';\r\n    element.style['-ms-user-select'] = 'none';\r\n    element.style.cursor = 'default';\r\n  }\r\n}\r\n","import { customAttribute, inject } from 'aurelia-framework';\r\n\r\n@customAttribute('take-focus')\r\n@inject(Element)\r\nexport class KeyReturn {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    this.element.focus();\r\n  }\r\n}\r\n","import { bindable, containerless } from 'aurelia-framework';\r\n\r\nconst DEFAULT_SIZE = 12;\r\n\r\n/* Bootstrap row wrapper */\r\n@containerless\r\nexport class BsRow {\r\n  @bindable lg = DEFAULT_SIZE;\r\n  @bindable md = DEFAULT_SIZE;\r\n  @bindable sm = DEFAULT_SIZE;\r\n  @bindable xs = DEFAULT_SIZE;\r\n\r\n  attached() {}\r\n}\r\n"],"sourceRoot":".."}